{"posts":[{"title":"A brand new site looks awkward","text":"Finally I make it, though it embodies a total simplism. Well, it’s fine as long as it is useful… What’s the pupose of this website anyway?","link":"/2022/07/06/2022-07-06-LTNS/"},{"title":"I&#39;m meeting an error this fast?!","text":"I haven’t expected to meet another problem since I struggled to create the website 10min ago.The thing is the description of the posts cannot be displayed, which means my complaints in this post cannot be displayed neither.But I’m still writing to curse this whole pile of not-looking-good codes, which does no good.","link":"/2022/07/06/2022-07-06-damnWebsite/"},{"title":"I&#39;ve passed the Subject 2 exam","text":"Congratulations!! I’m heading to Subject 3 at 60km/h hahaha…","link":"/2022/07/06/2022-07-06-lifeUpdates/"},{"title":"Mastering the website?!","text":"As you can see, I’ve successfully created a ‘category’ page (basically copy-pasting from others’ work though).And here I’m trying to upload the first picture of my website:looks good.","link":"/2022/07/06/2022-07-06-mastering/"},{"title":"image gallery constructed","text":"Agian, I moved a step forward to mastering markdown by using skilfful copy-pasting. Pages log folder log.js log.json log.wxml log.wxss","link":"/2022/07/08/2022-07-08-image_gallery_update/"},{"title":"Testing the images","text":"url: /assets/chisato.jpg url: https://user-images.githubusercontent.com/60023638/177815981-3059b9b2-8228-492e-bc63-2c3d592643e3.jpg I tried to make the picture shown as part of the title of this post, which can then be displayed on homepage fo the website, and failed.another thing worth to mention here is that, the first picture is first uploaded to the assets directory and then refered in this file. In this way, it has to be refered using a relative link. I know the first picture fails to display when you check this file on github, but it works on my website.and the second is directly uploaded to this file, which works well as usual.","link":"/2022/07/07/2022-07-07-addingImage/"},{"title":"Creating a virtual machine (ubuntu) with virtual box","text":"Yesterday, I created a virtual machine for ubuntu system using VirtualBox. Download the iso file of the operating system: Open VirtualBox, then choose the corresponding operating system: Mount the iso file on VirtualBox: Format the disk space. Complete the regular settings. Set network adapters:_ there can be multiple adapters_ For my virtual machine, one adapter is used for NAT, the other one is used to connect to the host through ssh remotely connect to the virtual machine through ssh:On host system, search for folder .ssh . There should be a public key id_rsa.pub .Then open it either using 1cat id_rsa.pub or1vim id_rsa.pub Switch to the virtual machine, again, find .ssh folder and open it with1vim authorized_keys and paste the public key to the file, then save and close the file with1:wq [ENTER] Use1ip a to chech the ip address of the virtual machine, and connect to the virtual machine through ssh remotely.","link":"/2022/07/11/2022-07-11-VirtualMachine/"},{"title":"Inserting multiple rows using executemany command in mysql","text":"While creating a table in a database, a row marked as “AUTO_INCREMENT” is necessary for multiple inserting: 12345678CREATE TABLE university ( id int(8) NOT NULL AUTO_INCREMENT, #without AUTO_INCREMENT, there will be an error while inserting multiple rows name varchar(50) NOT NULL, university varchar(50) NOT NULL, major varchar(50) NOT NULL, PRIMARY KEY (id)) ENGINE=MyISAM AUTO_INCREMENT=1 DEFAULT CHARSET=utf8; Then, create an array of the tuples you want to insert: 123456data = [(&quot;abc&quot;,'四川大学','口腔医学'), (&quot;def&quot;,'北京师范大学','教育学类'), (&quot;ghi&quot;,'北京工业大学','数学类'), (&quot;jkl&quot;,'北京邮电大学','电子信息'), (&quot;mno&quot;,'北京理工大学','未来精工技术'), ] And use executemany command to insert: 123456789try: # 执行sql语句，插入多条数据 cursor.executemany(&quot;insert into university(name, university, major) values (%s, %s, %s)&quot; , data) # 提交数据 db.commit()except: # 发生错误时回滚 db.rollback() print('error') lines about connecting to database and ceating cursor instance is ignored","link":"/2022/07/20/2022-07-21-mysql/"},{"title":"Gong&#39;s Dish -- braising eggplant","text":"My first specialty dishes: Braising eggplant…Even thoug it doesn’t look very tasty, it is really delicious especially when you eat it with rice.Cookbook: Peel the eggplant and “spread” it like this:In this way the dish won’t look that messy. Then steam the eggplant for about 15 min. As for the sauce, there are two versions:_ For the light version, soy sauce 2 spoons oyster sauce 1 spoon rice wine 1 spoon dark soy sauce 1 spoon (or less) honey 1 spoon white sugar, salt depends Starch water 1 bowl_ For the heavy flavor version, soy sauce 2 spoons oyster sauce 1 spoon dark soy sauce 1 spoon (or less) honey 1 spoon white sugar, salt depends Coca Cola (NO PEPSI, thanks!) 1 bowl Fry the eggplants until they turn burnt yellow (I haven’t succeeded frying eggplants into this color, maybe I should add more oil?). Add the sauce into the pan, and stew it for some time over high heat to thicken the sauce. FINISHED さ、やてみろ！","link":"/2022/07/29/2022-07-29-ChineseEggplant/"},{"title":"Long Time No See and some bash codes tips","text":"Hey there, it has been a month since I updated my posts. In the past month I struggled with all those troublesome stuffs emerging at the beginning of the campus life in UIUC.Actually I am still struggling with them nowSo much for the complaints, I’ve enrolled in the cs124 honor course besides the cs124. These two classes are in fact not correlated at all. The cs124 honor is mainly held by a group of senior students.And no credit hour is given for this course. What I can get is, basically, well, honor?All in all, they are training us with bash and git for future projects.I learned bash this week and luckily found that it was just like how the terminal in Linux OS worked.Here are some notes: touch file.ext is used to create a file. The type of the file depends on the extension you give. echo &quot;string&quot; and echo &quot;string&quot; &gt; file.ext The first command prints the content in the string in a new line, and the second one prints the string into the fil. Using the “&gt;” redirect sign, you can write the string directly into the file through terminal, but “&gt;” will delete the original content and “&gt;&gt;” won’t cat file.ext prints the content in the file to the terminalI think these are things to be noticed during my bash learning. So much for that.","link":"/2023/02/01/2022-08-31-Long_Time_No_See/"},{"title":"Winter Holiday Vail, Colorado","text":"Arriving at Vail, Colorado!2022.12.16Heavy snow covered the fields in Denvor!First night at Vail Resort. It was fantastic with all neon lights glowing. Practicing on introductory skiing skills2022.12.17Since I’d skied for once before, I mastered the “snow plough” pretty quickly. snow plough is a elementary skiing skill. It helps to slow down by pushing the back of both skis out, or make a turn by pushing the back of one of the skis. Learning higher level skills and “adventure” in the mountain2022.12.18~2022.12.21To be able to ski on steeper slopes, I had to learn the “parallel turning”, which would slow down and turn more effectively.I practiced on a relatively gentle slope for two days.Here are some tips: Put most of the weight of the body forward (downhill) so that the body won’t fall to the slope; While making a parallel turn, put more weight on the ski downhill, it is then easier to make the ski uphill parallel to the one downhill. Look forward and make sure that you cannot see the tips of your skis, or your weight may be lagging behind, leading to a fall. On 2022.12.21, I rode the chairlift to a top of the mountain and skied all the way down. There were some slip-overs but I did feel a sense of achievement! For more pictures, go to image gallery","link":"/2022/12/22/2022-12-22-holiday/"},{"title":"Wechat Devtool 1","text":"Wechat Miniapplication: Wechat Miniapplication is literally an application based on Wehcat. Different from ordinary applications, it is said that these miniapplications can be used without downloading &amp; installing. In fact, it is because they have a very small size (less than 2M) so that the users won’t be aware of the process of downloading. Wechat developer tool: a specially designed IDE for wechat miniapplications. The regular code structure of a miniapplication: pages It is recommended to create all the codes for each page of the application in this folder. &nbsp log This is an example folder for a log page in the application. In a page folder, there will usually be four files: log.js: .js file is responsible for the logical components of the page. Using javascript, developers can bind events to a button, pass parameters, etc. log.json: I haven't worked much about the .json files so far. As far as I know, it is resonsible for the page's &quot;setup&quot;: page title, text style, background color... log.wxml: .wxml is derived from html. It sues a language syntax similar to html to create elements like `&lt;view&gt;&lt;/view&gt;`, `&lt;button&gt;&lt;/button&gt;` on the page. log.wxss: wxss is derived from css. It works similarly. I use it to arrange the elements shown on the page, like position and flex display. utils util.js app.js app.js file is responsible for the global logic. The APP() in it is the start point of the overall application code. app.json A page can be displayed only after you add the link of the page into this file. app.json is responsible for the global setup. For example, you can set the primary background color or add the tab bars. app.wxss app.wxss works the same as the .wxss files of the pages, but it influences globally. The page wxss arrangement is prior to the global arrangement. project.config.json This file contains the settings of a miniapplication project. sitemap.json","link":"/2023/02/01/2022-09-17-WecahtDevetoolntro/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2023/08/10/hello-world/"},{"title":"Implementing single node, multiple processes LLM training","text":"Training a Python code generator using single node mulitple processes 0. IntroductionThis passage is based on a project form the book Natural Language Processing with Transformers, Chapter 10: Training Transformers from Scratch. The content describes the whole process of training a python code generating model on a remote server and montoring the training parameters on WandB.ResourcesThe dataset and the model are from the book Natural Language Processing with Transformers, Chapter 10: Training Transformers from Scratch.https://huggingface.co/transformersbook/codeparrot-smallInstallation of GPU driver refers to this document:https://docs.google.com/document/d/1BXB90aixWiKry0Qmk-g2PfxdIlJcib_wntOFbqlxnHw/edit 1. The training environment GPU driver: cuda-keyring_1.0-1Virtual environment: conda 23.5.2Requirements: python==3.10.2 wandb==0.15.8 tensorboard==2.12.3 tensorboard-data-server==0.7.1 huggingface-hub==0.16.4 transformers==4.16.2 datasets==1.16.1 accelerate==0.5.1 2. Training process Connect to the remote server.With password:(base) gong208@bogon ~ % ssh clouduser@61.241.103.39 -p 10053Without password:(base) gong208@bogon ~ % cd .ssh(base) gong208@bogon .ssh % ssh-keygen #generates a public key and private key(base) gong208@bogon .ssh % ssh-copy-id -p 10053 clouduer@61.241.103.39 #saves the public key under /.ssh directory of the serverConnect using proxy:(base) gong208@bogon ~ % ssh -R 7890:127.0.0.1:7890 -p 10053 clouduser@61.241.103.39(base) clouduser@ubuntu:~$ export HTTP_PROXY=http://127.0.0.1:7890 HTTPS_PROXY=http://127.0.0.1:7890 Download the model and required dependenciesClone the model codeparrot-small from huggingface using git clone.Create a virtual environment with python3.10.2 using Conda. (env) in the following passage means to run the code in the virtual environment.In the environment, install the dependencies in the requirements.txt file from the model directory:(env) ~/codeparrot-small$ pip install -r requirements.txt problem you may encounter:You may find that the requirements.txt file refers to the newest version of some dependencies, which may cause potential crashes, so you can download using pip and specify the version.You may have to use pip mirror install in China, for example(env) ~/codeparrot-small$ pip install -i https://mirrors.aliyun.com/pypi/simple/ --trusted-host=mirrors.aliyun.com &quot;tensorboard==2.12.3&quot;All the dependencies and their versions are listed below:wandb==0.15.8tensorboard==2.12.3tensorboard-data-server==0.7.1huggingface-hub==0.16.4transformers==4.16.2datasets==1.16.1accelerate==0.5.1 3. Training configurationSince the training script uploads the metrics to WandB, we can log in Wandb before training to receive training information afterward. The training is launched through accelerate. To enable Data Distributed Parallelism, we have to set up some configurations before training:~/codeparrot-small$ accelerate config Compute environment: This machine Which type of machine: multi-GPU How many machines will you use: 1 Use DeepSpeed? NO How many processes in total: 8 Use FP16? yes This configuration is for a single node (one machine) eight processes (8 GPUs) training. With the configuration, we can now try to start the training process. Since it would last for a long time (about 1.5 days for the small model), running the process in tmux is advisable so the training can run in the background.~/codeparrot-small$ tmuxIf you want to detach from the tmux session, press ‘ctrl+b’ then press ‘d’. If you want to end the session, type exit. 4. Launching the training processThen we can launch the training script through accelerate:(env) ~/codeparrot-small$ accelerate launch codeparrot_training.pyTo better record the errors that arise, we can add another piece of code:(env) ~/codeparrot-small$ accelerate launch codeparrot_training.py 2&gt;&amp;1 | tee log.txt, which saves the return information in log.txt.#problems you may encounter:The program may report failing to find the datasets. The most direct solution is to download the dataset from huggingface.~$ git lfs install~$ git clone https://huggingface.co/datasets/transformersbook/codeparrot-train~$ git clone https://huggingface.co/datasets/transformersbook/codeparrot-valid Make sure that the dataset_name is set to ‘../codeparrot’ so that the script can locate the downloaded dataset. There’s an error in the Python script. In line 82, under the valid_data attribute, change the split parameter from ‘train’ to ‘validation’.Delete the error_bad_chunk=False argument in line 78 and line 83, or they may cause a syntax error.","link":"/2023/08/16/training/"}],"tags":[],"categories":[{"name":"website_update","slug":"website-update","link":"/categories/website-update/"},{"name":"life","slug":"life","link":"/categories/life/"},{"name":"cs_learning","slug":"cs-learning","link":"/categories/cs-learning/"},{"name":"my_dishes","slug":"my-dishes","link":"/categories/my-dishes/"},{"name":"cs_learning life","slug":"cs-learning-life","link":"/categories/cs-learning-life/"}],"pages":[{"title":"Welcome to Jiangshan&#39;s Personal Website","text":"WHO AM I","link":"/index.html"},{"title":"About","text":"This page is created according to following links:https://github.com/ppoffice/hexo-theme-icarushttps://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html","link":"/About/index.html"},{"title":"Blog","text":"","link":"/Blog/index.html"},{"title":"Home","text":"WHO AM I","link":"/Home/index.html"}]}